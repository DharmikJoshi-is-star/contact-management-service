{
  "swagger": "2.0",
  "info": {
    "description": "API Documentation",
    "version": "1.0",
    "title": "Contact Management Service",
    "termsOfService": "urn:tos",
    "contact": {
      "name": "Dharmik Joshi",
      "email": "dharmikj75@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0"
    }
  },
  "host": "localhost:8080",
  "basePath": "/contact-management-service",
  "tags": [
    {
      "name": "contact-controller",
      "description": "Contact Controller"
    }
  ],
  "paths": {
    "/api/v1/contacts": {
      "get": {
        "tags": [
          "contact-controller"
        ],
        "summary": "To get list user contacts with/without using filters firstName, lastName, email",
        "description": "This api will perform pattern matching for all firstName, lastName, email values",
        "operationId": "getContactsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "email",
            "required": false,
            "type": "string"
          },
          {
            "name": "firstName",
            "in": "query",
            "description": "firstName",
            "required": false,
            "type": "string"
          },
          {
            "name": "lastName",
            "in": "query",
            "description": "lastName",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully executed the query",
            "schema": {
              "$ref": "#/definitions/UserContactResponse"
            }
          },
          "401": {
            "description": "Unauthorised Access"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "contact-controller"
        ],
        "summary": "To create new user contact",
        "operationId": "addContactUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "addUserContactRequest",
            "description": "addUserContactRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddUserContactRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully saved the Information",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorised Access"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/api/v1/contacts/{userContactId}": {
      "get": {
        "tags": [
          "contact-controller"
        ],
        "summary": "To get user contact by userContactId",
        "operationId": "getContactUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "userContactId",
            "in": "path",
            "description": "User Contact id",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully executed the query",
            "schema": {
              "$ref": "#/definitions/UserContactResponse"
            }
          },
          "400": {
            "description": "userContact not found"
          },
          "401": {
            "description": "Unauthorised Access"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "contact-controller"
        ],
        "summary": "To update existing user contact with new details",
        "operationId": "updateContactUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "updateUserContactRequest",
            "description": "updateUserContactRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateUserContactRequest"
            }
          },
          {
            "name": "userContactId",
            "in": "path",
            "description": "User Contact id",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated the Information",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "userContact not found or invalid request data"
          },
          "401": {
            "description": "Unauthorised Access"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "contact-controller"
        ],
        "summary": "To delete existing contact",
        "operationId": "deleteContactUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "userContactId",
            "in": "path",
            "description": "User Contact id",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User contact deleted successfully",
            "schema": {
              "type": "object"
            }
          },
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "userContact not found"
          },
          "401": {
            "description": "Unauthorised Access"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    },
    "/ping": {
      "get": {
        "tags": [
          "contact-controller"
        ],
        "summary": "ping",
        "operationId": "pingUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    }
  },
  "definitions": {
    "AddUserContactRequest": {
      "type": "object",
      "required": [
        "email",
        "firstName",
        "lastName",
        "phoneNumber"
      ],
      "properties": {
        "email": {
          "type": "string",
          "example": "dharmikj75@gmail.com",
          "description": "Email Id name of user, required field can't be blank and only accept valid email id"
        },
        "firstName": {
          "type": "string",
          "example": "Dharmik",
          "description": "First name of user, required field can't be blank"
        },
        "lastName": {
          "type": "string",
          "example": "Joshi",
          "description": "Last name of user, required field can't be blank"
        },
        "phoneNumber": {
          "type": "string",
          "example": 9012345678,
          "description": "Phone number of user, required field can't be blank and only accept numeric string of length 10 whose first number should be in range of 6-9"
        }
      },
      "title": "AddUserContactRequest"
    },
    "UpdateUserContactRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": "dharmikj75@gmail.com",
          "description": "Email Id name of user, only accept valid email id"
        },
        "firstName": {
          "type": "string",
          "example": "Dharmik",
          "description": "First name of user"
        },
        "lastName": {
          "type": "string",
          "example": "Joshi",
          "description": "Last name of user"
        },
        "phoneNumber": {
          "type": "string",
          "example": 9012345678,
          "description": "Phone number of user, only accept numeric string of length 10 whose first number should be in range of 6-9"
        }
      },
      "title": "UpdateUserContactRequest"
    },
    "UserContactResponse": {
      "type": "object",
      "required": [
        "email",
        "firstName",
        "lastName",
        "phoneNumber",
        "userContactId"
      ],
      "properties": {
        "email": {
          "type": "string",
          "example": "dharmikj75@gmail.com",
          "description": "Email Id name of user"
        },
        "firstName": {
          "type": "string",
          "example": "Dharmik",
          "description": "First name of user"
        },
        "lastName": {
          "type": "string",
          "example": "Joshi",
          "description": "Last name of user"
        },
        "phoneNumber": {
          "type": "string",
          "example": 9012345678,
          "description": "Phone number of user, only numeric string of length 10 whose first number should be in range of 6-9"
        },
        "userContactId": {
          "type": "string",
          "example": "6419e093c3c1a552ac4155d2",
          "description": "User contact id is unique reference id to access the data"
        }
      },
      "title": "UserContactResponse"
    }
  }
}